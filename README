About StarDust
- Offical Currency name is Dust
- Startdust is a fully featured Currency Module for Aurora-Sim
- It has only been tested in a grid configuration
- Uses Paypal for all transactions
- Uses a banking avatar where all purchases of currency come from
- Integration in with Web UI
- Integration with Joomla

=============================================================
DISCLAIMER/License Agreement - READ ME <<<<<<<<<<<<<<<<<<<<<<
=============================================================
By using this module you agree that Skidz Tweak, Aurora-Sim, Virtual Reality, or other contributing developers are in no way responsable for any damages that may occure as a result of using this module.
By using this module you agree that you understand the risks of running this module and are fully willing to except those risks and any consequences that may occure.

=============================================================
WINDOWS BETA INFO
=============================================================
* This has only been tested with mysql
* This has only been tested on Windows 32Bit
* This has only been tested in a grid config

=============================================================
LINUX BETA INFO
=============================================================
* This has only been tested with mysql
* This has only been tested on Ubuntu Server 10.04 10.10, 11.04, 11.10 64Bit
* This has only been tested in a production grid or grid config

=============================================================
How to set up StarDust Currency with Paypal:
=============================================================

Set up Paypal (Normal user setup):
1. Sign up for https://www.paypal.com/
2. Create a Token for purchase confirmation on your business test user
	A. https://cms.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=developer/howto_html_paymentdatatransfer
	B. Use http://localhost/index.php?page=paypalcomplete as the return url.. with your domain.. Set up Paypal Sandbox:

Set up Paypal (Testing/Development setup):
1. Sign up for https://developer.paypal.com/
2. Create Test accounts. Use preconfigured account. 
	A. Make one Buisiness
	B. Other User
		Make sure you add a bank account to the user
3. Create a Token for purchase confirmation on your business test user
	A. https://cms.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=developer/howto_html_paymentdatatransfer
	B. Use http://localhost/index.php?page=paypalcomplete as the return url.. with your domain.. 

	
==============================================================
Setting up Aurora.Server for Stardust currency (grid mode)
==============================================================
	
Grid Instance:
1. Copy the "bin" folder and paste it into your Aurora-Sim Folder
2. Change economy setting in GridInfoService.ini to point to your grid login uri.. 
	Example: economy = http://127.0.0.1:8002/
	Ensure slash is on the end
	
	Also, uncomment (remove the ;;) and change
	SendGridInfoToViewerOnLogin = true
	
	You can also change the 
	CurrencySymbol
	and 
	RealCurrencySymbol
	as well so that you have custom $ symbols for your currency.

3. Copy and paste the StarDust.ini into your AuroraServerConfiguration/ folder (in the bin folder where Aurora.Server runs).
4. Add the following to the bottom of your AuroraServer.ini File (in the bin folder where Aurora.Server runs)
	Include-Currency = AuroraServerConfiguration/StarDust.ini

==============================================================
Setting up region instances (in grid mode) for StarDust
==============================================================

1. Copy the "bin" folder and paste it into your Aurora-Sim Folder
2. Under Configuration/Modules/Economy.ini, change
[Currency]
    Module = BaseCurrency

to

[Currency]
    Module = StarDust

==============================================================
Setting up WebUI for StarDust
==============================================================

1. Copy the WebUI Folder Content into your WebUI folder. Some files will be over writen.
2. Edit the settings/StarDust.php file
	Ensure you use the sandbox for testing
3. Go through all the language files on your website and add the following to each for each corasponding file
	include('languages/additional/lang_en.php');
4. Run the SQL files that start with "ZZ" against your WebUI Database to add menu items.
5. If you wish to sell regions as well edit the "SAMPLE" sql file and run it.

==============================================================
Setting up Joomla for StarDust
==============================================================

1. Install Stardust on your Aurora-Sim instance like normal
2. Run the Stardust WebUI “SQL” files in the same database as Aurora-Sim
3. Login to your Joomla administrator page
4. Go to “Extensions/Install/Uninstall”
5. Under the section “Install from Directory” type in the follow folders
6. mod_stardust
7. mod_stardust_purchase
8. mod_stardust_land
9. Go to your arical manager under “Content/Artile Manager”
10. Create a 3 new Articles, *Stardust Currency History, *Purchase Island, and *Purchase currency
11. Add your articles as links in the main menu under “Menus/Main Menu”
12. Go to “Extension/Modules”
13. Locate the 3 modules and enable them, and fill out the paramaters. For details on the correct values for each of the paramaters please see Stardust documentation. Notification URLs, and Return URLs should be pointed to the page you made for stardust purchase currency page.
14. If you have any questions, or concerns or you would like to contribute please feel free to contant me.

==============================================================
Settings - Restrictions
==============================================================

Restrictions have been added to help reduce the chances of fraud.
There are two basic types of restrictions:
1) Restricts how much money can be spent after a purchase for X number of hours.
2) Restricts how much currency can be purchased in X number of days.
* RestrictMoneyHoursAfterPurchase - number of hours money is restricted after purchase
* RestrictMoneyCanSpendAfterPurchase - amount of money they are allowed to spend in restriction
* MaxAmountPurchaseDays - Max Amount purchase pieriod 
* MaxAmountPurchase - Max amount of money they can purcahse

Note: If the amount of money purchased is less than the amount they are allowed to spend after a purchase then only half the currency that was purchased can be spent for X number of hours.
These restrictions will not effect any curreny they already have that is restion free already.